{{- if and (eq .Values.executionMode "queue") .Values.queue.redis.deploy (not .Values.queue.redis.external) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "n8n.redisSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "n8n.redisSelectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "n8n.redisImage" . }}
          imagePullPolicy: {{ .Values.queue.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.workerResources | nindent 12 }}
          {{- if .Values.queue.redis.persistence.enabled }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
          {{- end }}
      {{- if .Values.queue.redis.persistence.enabled }}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-redis
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "n8n.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "n8n.redisSelectorLabels" . | nindent 4 }}
{{- if .Values.queue.redis.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.queue.redis.persistence.storageClass }}
  {{- if (eq "-" .Values.queue.redis.persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.queue.redis.persistence.storageClass | quote }}
  {{- end }}
  {{- else if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass | quote }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.queue.redis.persistence.size | quote }}
{{- end }}
{{- end }}