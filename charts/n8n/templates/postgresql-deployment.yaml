{{- if and (eq .Values.database.type "postgresdb") .Values.database.postgresql.deploy (not .Values.database.postgresql.external) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "n8n.postgresqlSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "n8n.postgresqlSelectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "n8n.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "n8n.postgresqlImage" . }}
          imagePullPolicy: {{ .Values.database.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.postgresql.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.database.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-db-secret
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U {{ .Values.database.postgresql.username | quote }} -d {{ .Values.database.postgresql.database | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U {{ .Values.database.postgresql.username | quote }} -d {{ .Values.database.postgresql.database | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.workerResources | nindent 12 }}
          {{- if .Values.database.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
      {{- if .Values.database.postgresql.persistence.enabled }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-postgresql
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "n8n.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    {{- include "n8n.postgresqlSelectorLabels" . | nindent 4 }}
{{- if .Values.database.postgresql.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.database.postgresql.persistence.storageClass }}
  {{- if (eq "-" .Values.database.postgresql.persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.database.postgresql.persistence.storageClass | quote }}
  {{- end }}
  {{- else if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass | quote }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.database.postgresql.persistence.size | quote }}
{{- end }}
{{- end }}